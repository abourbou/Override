
int main(int argc, char **argv)
{


    uVar7 = 0;
    ptr._0_1_ = -1;
    if (argc != 2) {
        printf("Usage: %s filename\n", *argv);
    }
    FILE *arg1 = fopen("./backups/.log", "w");
    if (arg1 == 0) {
        printf("ERROR: Failed to open %s\n", "./backups/.log");
        exit(1);
    }
    log_wrapper(arg1, "Starting back up: ", argv[1]);
    iVar3 = fopen(argv[1], "r");
    if (iVar3 == 0) {
        printf("ERROR: Failed to open %s\n", argv[1]);
        exit(1);
    }
    stack0xffffffffffffff88 = (char *)str.._backups._0_8_;
    uStack112 = str.._backups._8_2_;
    cStack110 = str.._backups[10];
    uVar5 = 0xffffffffffffffff;
    pcVar6 = (char *)((int64_t)&ptr + 1);
    do {
        if (uVar5 == 0) break;
        uVar5 = uVar5 - 1;
        cVar1 = *pcVar6;
        pcVar6 = pcVar6 + (uint64_t)uVar7 * -2 + 1;
    } while (cVar1 != '\0');
    strncat((int64_t)&ptr + 1, argv[1], 99 - (~uVar5 - 1));
    iVar2 = open((int64_t)&ptr + 1, 0xc1, 0x1b0);
    if (-1 < iVar2) goto code_r0x00400bee;
    printf("ERROR: Failed to open %s%s\n", "./backups/", argv[1]);
    exit(1);
    do {
        write(iVar2, &ptr, 1);
code_r0x00400bee:
        ptr._0_1_ = fgetc();
    } while ((char)ptr != -1);
    log_wrapper(arg1, "Finished back up ", (char **)argv[1]);
    fclose(iVar3);
    close(iVar2);
    uVar4 = 0;
	#protection canaru
    if (canary != *(int64_t *)(in_FS_OFFSET + 0x28))
	{
        uVar4 = __stack_chk_fail();
    }
    return uVar4;
}
